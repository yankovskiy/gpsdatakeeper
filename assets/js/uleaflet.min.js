const drawnItems=L.featureGroup();const drawControl=new L.Control.Draw({edit:{featureGroup:drawnItems},draw:{polygon:false,circle:false,rectangle:false,circlemarker:false,polyline:{shapeOptions:{opacity:1,color:"#ff241c"}}},position:"topright"});var map;var gpsDataToken;var gpsDataTitle="My tracks";const defaultInitOptions={mapCenter:[0.01,0.01],mapZoom:2,geoData:undefined,isOwner:undefined,isGuest:undefined,gpsDataTitle:gpsDataTitle,gpsDataToken:undefined};function saveToServerClickListener(){$("#save-to-server").click(function(){if(hasGeoData()){$("#save-data-modal").modal("show")}})}function openFileChangeListener(){function a(d){function f(i){const k=i.name.split(".");const j=k.length;return k[j-1].toLowerCase()}function c(i){return i==="gpx"||i==="kml"}function g(i){var j=L.geoJSON(i);j.eachLayer(function(k){drawnItems.addLayer(k)})}const e=d.files[0];const h=f(e);const b=new FileReader();if(!c(h)){alert("Incorrect file extension");return}b.onload=function(j){const l=new DOMParser();const k=l.parseFromString(j.target.result,"text/xml");const i=h==="gpx"?toGeoJSON.gpx(k):toGeoJSON.kml(k);console.log(i);g(i)};b.readAsText(e)}$("#open-file").change(function(){a(this)})}function u_init(l){const h="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png";const k='&copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors';const f=L.tileLayer(h,{maxZoom:18,attribution:k});const e={mapCenter:l.mapCenter!==undefined?l.mapCenter:defaultInitOptions.mapCenter,mapZoom:l.mapZoom!==undefined?l.mapZoom:defaultInitOptions.mapZoom,geoData:l.geoData,isOwner:l.isOwner,isGuest:l.isGuest,gpsDataTitle:l.gpsDataTitle!==undefined?l.gpsDataTitle:defaultInitOptions.gpsDataTitle,gpsDataToken:l.gpsDataToken};map=new L.Map("map",{center:e.mapCenter,zoom:e.mapZoom,zoomControl:false});drawnItems.addTo(map);f.addTo(map);L.control.layers({},{"Show drawing":drawnItems},{position:"topright",collapsed:false}).addTo(map);const a=function(n,m){return Math.round(n*(Math.pow(10,m)))/(Math.pow(10,m))};const b=function(m){return"("+a(m.lat,6)+", "+a(m.lng,6)+")"};const d=function(o){if(o instanceof L.Marker||o instanceof L.CircleMarker){return b(o.getLatLng())}else{if(o instanceof L.Polyline){var m=o._defaultShape?o._defaultShape():o.getLatLngs(),p=0;if(m.length<2){return"Distance: N/A"}else{for(var n=0;n<m.length-1;n++){p+=m[n].distanceTo(m[n+1])}return"Distance: "+L.GeometryUtil.readableDistance(p,"metric")}}}return null};map.on(L.Draw.Event.CREATED,function(o){const m=o.layer;drawnItems.addLayer(m);const n=d(m);if(n!==null){m.bindPopup(n)}});map.on(L.Draw.Event.EDITED,function(n){const o=n.layers;var m=null;o.eachLayer(function(p){m=d(p);if(m!==null){p.setPopupContent(m)}})});var j=true;const c=(e.isGuest!==undefined&&e.isGuest);if(e.geoData!==undefined){const i=JSON.parse(e.geoData);var g=L.geoJSON(i);g.eachLayer(function(m){drawnItems.addLayer(m);const n=d(m);if(n!==null){m.bindPopup(n)}});if(c){hideSaveDataLink()}if(c||(e.isOwner!==undefined&&!e.isOwner)){j=false}}if(j){map.addControl(drawControl);gpsDataTitle=e.gpsDataTitle;gpsDataToken=e.gpsDataToken}L.control.sidebar("sidebar").addTo(map);L.control.locate({position:"topright",icon:"glyphicon glyphicon-globe",iconLoading:"glyphicon glyphicon-refresh"}).addTo(map);handleDownload("kml");handleDownload("gpx");saveToServerClickListener();handleSaveDataModal();openFileChangeListener()}function hasGeoData(){return drawnItems.getLayers().length!==0}function hideSaveDataLink(){$(".save-block").remove()}function handleSaveDataModal(){$("#save-button").click(function(){const e=$("#gps-data-title").val();function f(){$("#default-form").addClass("has-error")}function c(){$("#save-button").hide();$("#default-form").hide();$("#save-progress").show()}function d(){$("#save-progress").hide();$("#save-error").show()}function a(){$("#save-progress").hide();$("#save-success").show()}function b(){const g=map.getCenter();const i=map.getZoom();const h=JSON.stringify(getGeoData());console.log("geo = "+h);$.post("/map/save-data",{data:h,title:gpsDataTitle,token:gpsDataToken,center:[g.lat,g.lng],zoom:i},function(j){if(j.status==="error"){d()}else{if(j.status==="success"){if(j.isOwner===false){map.removeControl(drawControl)}else{map.addControl(drawControl)}if(j.isGuest){hideSaveDataLink()}history.pushState(null,null,j.url);gpsDataToken=j.token;a()}}})}if(e!==null&&e.trim().length>0){gpsDataTitle=e;c();b()}else{f()}});$("#save-data-modal").on("show.bs.modal",function(a){$("#gps-data-title").val(gpsDataTitle);$("#default-form").show().removeClass("has-error");$("#save-button").show();$("#save-success").hide();$("#save-progress").hide();$("#save-error").hide()})}function handleDownload(c){var b="download-";if(c==="kml"){b+="kml"}else{if(c==="gpx"){b+="gpx"}else{console.error("Unsupported format");return}}const a=document.getElementById(b);a.onclick=function(g){var d=getGeoData();if(d===null){return}console.log(JSON.stringify(d));if(c==="kml"){d=tokml(d)}else{if(c==="gpx"){d=togpx(d)}}const f="application/xml;charset=utf-8,"+encodeURIComponent(d);a.setAttribute("href","data:"+f);a.setAttribute("download","data."+c)}}function getGeoData(){if(!hasGeoData()){return null}return drawnItems.toGeoJSON()};