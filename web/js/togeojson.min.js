var toGeoJSON=(function(){var q=/\s*/g,f=/^\s*|\s*$/g,g=/\s+/;function n(t){if(!t||!t.length){return 0}for(var v=0,w=0;v<t.length;v++){w=((w<<5)-w)+t.charCodeAt(v)|0}return w}function r(t,v){return t.getElementsByTagName(v)}function l(t,v){return t.getAttribute(v)}function s(t,v){return parseFloat(l(t,v))}function j(t,w){var v=r(t,w);return v.length?v[0]:null}function d(t){if(t.normalize){t.normalize()}return t}function a(t){for(var v=0,w=[];v<t.length;v++){w[v]=parseFloat(t[v])}return w}function b(t){if(t){d(t)}return(t&&t.textContent)||""}function c(t){return a(t.replace(q,"").split(","))}function m(t){var x=t.replace(f,"").split(g),y=[];for(var w=0;w<x.length;w++){y.push(c(x[w]))}return y}function u(t){var y=[s(t,"lon"),s(t,"lat")],v=j(t,"ele"),w;if(v){w=parseFloat(b(v));if(!isNaN(w)){y.push(w)}}return{coordinates:y}}function i(){return{type:"FeatureCollection",features:[]}}var o;if(typeof XMLSerializer!=="undefined"){o=new XMLSerializer()}else{var p=(typeof process==="object"&&!process.browser);var k=(typeof Titanium==="object");if(typeof exports==="object"&&(p||k)){o=new (require("xmldom").XMLSerializer)()}else{throw new Error("Unable to initialize serializer")}}function e(t){if(t.xml!==undefined){return t.xml}return o.serializeToString(t)}var h={kml:function(M){var K=i(),x={},L={},D={},t=["Polygon","LineString","Point","Track","gx:Track"],B=r(M,"Placemark"),A=r(M,"Style"),J=r(M,"StyleMap");for(var H=0;H<A.length;H++){var v=n(e(A[H])).toString(16);x["#"+l(A[H],"id")]=v;L[v]=A[H]}for(var F=0;F<J.length;F++){x["#"+l(J[F],"id")]=n(e(J[F])).toString(16);var N=r(J[F],"Pair");var G={};for(var E=0;E<N.length;E++){G[b(j(N[E],"key"))]=b(j(N[E],"styleUrl"))}D["#"+l(J[F],"id")]=G}for(var I=0;I<B.length;I++){K.features=K.features.concat(w(B[I]))}function C(O){return a(O.split(" "))}function z(O){var P=r(O,"coord","gx"),R=[];if(P.length===0){P=r(O,"gx:coord")}for(var Q=0;Q<P.length;Q++){R.push(C(b(P[Q])))}return{coords:R}}function y(T){var R,W,S,Q,P,X=[];if(j(T,"MultiGeometry")){return y(j(T,"MultiGeometry"))}if(j(T,"MultiTrack")){return y(j(T,"MultiTrack"))}if(j(T,"gx:MultiTrack")){return y(j(T,"gx:MultiTrack"))}for(S=0;S<t.length;S++){W=r(T,t[S]);if(W){for(Q=0;Q<W.length;Q++){R=W[Q];if(t[S]==="Point"){X.push({type:"Point",coordinates:c(b(j(R,"coordinates")))})}else{if(t[S]==="LineString"){X.push({type:"LineString",coordinates:m(b(j(R,"coordinates")))})}else{if(t[S]==="Polygon"){var V=r(R,"LinearRing"),U=[];for(P=0;P<V.length;P++){U.push(m(b(j(V[P],"coordinates"))))}X.push({type:"Polygon",coordinates:U})}else{if(t[S]==="Track"||t[S]==="gx:Track"){var O=z(R);X.push({type:"LineString",coordinates:O.coords})}}}}}}}return{geoms:X}}function w(O){var Q=y(O);if(!Q.geoms.length){return[]}var P={type:"Feature",geometry:(Q.geoms.length===1)?Q.geoms[0]:{type:"GeometryCollection",geometries:Q.geoms},properties:{}};if(l(O,"id")){P.id=l(O,"id")}return[P]}return K},gpx:function(C){var w,z=r(C,"trk"),D=r(C,"rte"),A=r(C,"wpt"),y=i(),E;for(w=0;w<z.length;w++){E=B(z[w]);if(E){y.features.push(E)}}for(w=0;w<D.length;w++){E=v(D[w]);if(E){y.features.push(E)}}for(w=0;w<A.length;w++){y.features.push(t(A[w]))}function x(I,L){var J=r(I,L),G=[],F=J.length;if(F<2){return{}}for(var H=0;H<F;H++){var K=u(J[H]);G.push(K.coordinates)}return{line:G}}function B(J){var H=r(J,"trkseg"),G=[],F;for(var I=0;I<H.length;I++){F=x(H[I],"trkpt");if(F){if(F.line){G.push(F.line)}}}if(G.length===0){return}return{type:"Feature",properties:{},geometry:{type:G.length===1?"LineString":"MultiLineString",coordinates:G.length===1?G[0]:G}}}function v(G){var F=x(G,"rtept");if(!F.line){return}return{type:"Feature",properties:{},geometry:{type:"LineString",coordinates:F.line}}}function t(F){return{type:"Feature",properties:{},geometry:{type:"Point",coordinates:u(F).coordinates}}}return y}};return h})();if(typeof module!=="undefined"){module.exports=toGeoJSON};